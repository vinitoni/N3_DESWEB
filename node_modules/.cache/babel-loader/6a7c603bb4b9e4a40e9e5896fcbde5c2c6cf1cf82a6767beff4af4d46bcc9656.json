{"ast":null,"code":"var _jsxFileName = \"C:\\\\N3_DESWEB\\\\LoginDashboardProject\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { logout, getUserData } from \"../utils/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Adicionar estado de carregamento\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const authUser = JSON.parse(localStorage.getItem(\"user\"));\n        if (!authUser) {\n          navigate(\"/\");\n          return;\n        }\n        const userInfo = await getUserData(authUser.uid);\n        if (userInfo) {\n          setUserData(userInfo);\n        } else {\n          throw new Error(\"Usuário não encontrado no banco de dados.\");\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Erro no Dashboard:\", err.message);\n      } finally {\n        setLoading(false); // Finalizar carregamento\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const handleLogout = async () => {\n    await logout();\n    localStorage.removeItem(\"user\");\n    navigate(\"/\");\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this); // Exibir carregamento enquanto busca os dados\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this); // Exibir erro caso ocorra\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: userData.isAdmin ? \"Admin Dashboard\" : \"Meu Perfil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), userData.isAdmin ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/manage-users\"),\n      children: \"Gerenciar Usu\\xE1rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Bem-vindo, \", userData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Tizn3h0RhIN+vDNLTMYPGv3HVJg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","logout","getUserData","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","userData","setUserData","error","setError","loading","setLoading","navigate","fetchUserData","authUser","JSON","parse","localStorage","getItem","userInfo","uid","Error","err","message","console","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","isAdmin","onClick","name","_c","$RefreshReg$"],"sources":["C:/N3_DESWEB/LoginDashboardProject/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { logout, getUserData } from \"../utils/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Adicionar estado de carregamento\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const authUser = JSON.parse(localStorage.getItem(\"user\"));\n        if (!authUser) {\n          navigate(\"/\");\n          return;\n        }\n\n        const userInfo = await getUserData(authUser.uid);\n        if (userInfo) {\n          setUserData(userInfo);\n        } else {\n          throw new Error(\"Usuário não encontrado no banco de dados.\");\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Erro no Dashboard:\", err.message);\n      } finally {\n        setLoading(false); // Finalizar carregamento\n      }\n    };\n\n    fetchUserData();\n  }, [navigate]);\n\n  const handleLogout = async () => {\n    await logout();\n    localStorage.removeItem(\"user\");\n    navigate(\"/\");\n  };\n\n  if (loading) {\n    return <p>Carregando...</p>; // Exibir carregamento enquanto busca os dados\n  }\n\n  if (error) {\n    return <p>{error}</p>; // Exibir erro caso ocorra\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1>{userData.isAdmin ? \"Admin Dashboard\" : \"Meu Perfil\"}</h1>\n      {userData.isAdmin ? (\n        <button onClick={() => navigate(\"/manage-users\")}>Gerenciar Usuários</button>\n      ) : (\n        <p>Bem-vindo, {userData.name}</p>\n      )}\n      <button onClick={handleLogout}>Logout</button>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}